name: Build and Test
on:
  pull_request:
  push:
jobs:

  build-and-test:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-10.15]
        py: [38, 39]
        allow-fail: [false]
        include:
          - os: ubuntu-latest
            py: 310
            allow-fail: true
          - os: macos-10.15
            py: 310
            allow-fail: true
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-20.09
      - uses: Swatinem/rust-cache@v1

      - name: Install dependencies with Nix
        run: nix-shell --argstr py ${{ matrix.py }}

      - name: Test Pure Rust
        run: nix-shell --argstr py ${{ matrix.py }} --run "cargo test --color=always"

      - name: Test Rust/C
        run: nix-shell --argstr py ${{ matrix.py }} --run "cargo test --color=always -p cmlem"

      - name: Test Pure Python
        run: nix-shell --argstr py ${{ matrix.py }} --run "PYTEST_ADDOPTS=--color=yes pytest -v python"

      - name: Compile PyO3
        run: nix-shell --argstr py ${{ matrix.py }} --run "cd bindings && cargo build"
        if: runner.os == 'Linux'

      - name: Test PyO3
        run: nix-shell --argstr py ${{ matrix.py }} --run "PYTEST_ADDOPTS=--color=yes pytest -v bindings"
        if: runner.os == 'Linux'
